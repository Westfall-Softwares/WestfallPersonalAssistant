[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "westfall-backend"
version = "1.0.0"
description = "Backend service for Westfall Personal Assistant"
authors = [
    {name = "Westfall Software", email = "support@westfall.dev"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
ai = [
    "llama-cpp-python",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
westfall-backend = "westfall_backend.app:main"

[project.urls]
Homepage = "https://github.com/Westfall-Softwares/WestfallPersonalAssistant"
Repository = "https://github.com/Westfall-Softwares/WestfallPersonalAssistant"
Issues = "https://github.com/Westfall-Softwares/WestfallPersonalAssistant/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["westfall_backend*"]

[tool.ruff]
target-version = "py38"
line-length = 100
select = ["E", "F", "W", "C90", "I", "N", "UP", "B", "A", "C4", "PIE", "T20"]

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
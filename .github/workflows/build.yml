name: Build and Test
permissions:
  contents: read

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test Backend
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        
    - name: Test backend startup
      run: |
        timeout 10 python -m backend.westfall_backend.app || echo "Backend startup test completed"
        
    - name: Test health endpoint
      run: |
        python -m backend.westfall_backend.app &
        BACKEND_PID=$!
        sleep 5
        curl -f http://127.0.0.1:8756/api/health
        kill $BACKEND_PID

  build:
    name: Build Electron App
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        npm install
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        
    - name: Test backend integration
      shell: bash
      run: |
        node electron/scripts/start-backend.js &
        BACKEND_PID=$!
        sleep 10
        kill $BACKEND_PID || true
        
    - name: Build Electron app
      run: npm run build
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electron-app-${{ matrix.os }}
        path: dist/
        retention-days: 30

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pylint flake8
        
    - name: Lint Python code
      run: |
        # flake8 backend/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # flake8 backend/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        echo "Python linting would run here"
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install Node dependencies
      run: npm install
      
    - name: Lint JavaScript
      run: |
        # npm run lint
        echo "JavaScript linting would run here"
name: CI/CD Pipeline

permissions:
  contents: read

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [created]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pytest pytest-asyncio httpx ruff black mypy
        
    - name: Lint with ruff
      run: |
        cd backend && ruff check .
        
    - name: Format check with black
      run: |
        cd backend && black --check .
        
    - name: Type check with mypy (if configured)
      run: |
        cd backend && mypy westfall_backend/ || echo "mypy not configured, skipping"
        
    - name: Run pytest tests
      run: |
        cd /home/runner/work/WestfallPersonalAssistant/WestfallPersonalAssistant && python -m pytest tests/ -v
        
    - name: Test backend startup
      run: |
        timeout 10 python -m backend.westfall_backend.app --host 127.0.0.1 --port 8758 &
        sleep 5
        curl -f http://127.0.0.1:8758/api/health || exit 1
        pkill -f "python -m backend.westfall_backend.app" || true

    - name: Test backend API endpoints
      run: |
        timeout 10 python -m backend.westfall_backend.app --host 127.0.0.1 --port 8759 &
        sleep 5
        curl -f http://127.0.0.1:8759/api/llm/models
        curl -f http://127.0.0.1:8759/api/tools/
        pkill -f "python -m backend.westfall_backend.app" || true

  electron-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install Electron dependencies
      run: |
        cd electron
        npm install
        
    - name: Lint Electron code (if available)
      run: |
        cd electron
        npm run lint || echo "Linting not configured"
        
    - name: Build Electron app
      run: |
        cd electron
        npm run build -- --dir || echo "Build not fully configured"
  
  integration-test:
    needs: [backend-tests]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        
    - name: Test Node.js backend startup script
      run: |
        cd electron
        timeout 15 node scripts/start-backend.js || echo "Integration test completed"